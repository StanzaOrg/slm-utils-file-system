include? ".slm/stanza.proj"
pkg-cache: ".slm/pkg-cache"
packages * defined-in "src/"

package utils/file-system requires :
  dynamic-libraries:
    on-platform:
      linux: "{.}/build/libutils-file-system.so"
      os-x: "{.}/build/libutils-file-system.dylib"
      windows: "{.}\\build\\libutils-file-system.dll"
  ccflags:
    "-L{.}/build"
    "-lutils-file-system"

; compile utils-file-system.c into a shared library
compile flag "-lutils-file-system" :
  on-platform :
    linux :
      "mkdir -p build"
      "cc -fPIC -c -DPLATFORM_LINUX '-I{STANZA_CONFIG}/include' '{.}/src/utils/utils-file-system.c' -o '{.}/build/utils-file-system.o'"
      "cc -shared '{.}/build/utils-file-system.o' -o '{.}/build/libutils-file-system.so' -lc"
    os-x :
      "mkdir -p build"
      "cc -fPIC -c -DPLATFORM_OS_X '-I{STANZA_CONFIG}/include' '{.}/src/utils/utils-file-system.c' -c -o '{.}/build/utils-file-system.o'"
      "cc -shared '{.}/build/utils-file-system.o' -o '{.}/build/libutils-file-system.dylib' -lc"
    windows :
      "if not exist 'build\\' mkdir build"
      "gcc -c -DPLATFORM_WINDOWS '-I{STANZA_CONFIG}/include' '{.}\\src\\utils\\utils-file-system.c' -o '{.}\\build\\utils-file-system.o'"
      "gcc -shared '{.}\\build\\utils-file-system.o' -o '{.}\\build\\libutils-file-system.dll' -lc"


build main :
  inputs:
    utils/file-system
  pkg: ".slm/pkgs"

build-test utils-file-system-tests :
  inputs:
    utils/file-system
    utils/file-system/tests
  pkg: ".slm/test-pkgs"
  o: "utils-file-system-tests"

