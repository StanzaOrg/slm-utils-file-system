include? ".slm/stanza.proj"
pkg-cache: ".slm/pkg-cache"

package utils-file-system defined-in "src/utils-file-system.stanza"
packages utils-file-system/* defined-in "src/utils-file-system/"

package utils-file-system requires :
  ccflags:
    on-platform :
      linux :
        "-L{.}/build"
        ; specify run-time shared-library search paths
        ; use $ORIGIN as the location of the running executable
        "-Wl,-rpath,$ORIGIN"
        "-Wl,-rpath,$ORIGIN/.slm/deps/utils-file-system/lib"
      os-x :
        "-L{.}/build"
      windows :
        "-L{.}\\build"
        "-Wl,-Bdynamic"
    "-lstz-utils-file-system"

; compile utils-file-system.c into a shared library
compile flag "-lstz-utils-file-system" :
  on-platform :
    linux :
      "mkdir -p '{.}/build'"
      "cc -fPIC -rdynamic -shared -DPLATFORM_LINUX '-I{STANZA_CONFIG}/include' '{.}/src/utils-file-system.c' -o '{.}/build/libstz-utils-file-system.so'"
    os-x :
      "mkdir -p '{.}/build'"
      "cc -fPIC -rdynamic -shared -DPLATFORM_OS_X '-I{STANZA_CONFIG}/include' '{.}/src/utils-file-system.c' -o '{.}/build/libstz-utils-file-system.dylib'"
    windows :
      "mkdir {.}\\build"
      "gcc -Wl,--export-all-symbols -shared -DPLATFORM_WINDOWS '-I{STANZA_CONFIG}/include' '{.}/src/utils-file-system.c' -o '{.}/build/libstz-utils-file-system.dll'"


build main :
  inputs:
    utils-file-system
  pkg: ".slm/pkgs"
  ;o: "main"

build-test test :
  inputs:
    utils-file-system/tests
  pkg: ".slm/test-pkgs"
  o: "utils-file-system-tests"

