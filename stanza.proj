include? ".slm/stanza.proj"
pkg-cache: ".slm/pkg-cache"

package file_system_utils defined-in "src/file_system_utils.stanza"
packages file_system_utils/* defined-in "src/file_system_utils/"

package file_system_utils requires :
  ccflags:
    "-L{.}/build"
    "-lstz_file_system_utils"

; compile file_system_utils.c into a static library
compile flag "-lstz_file_system_utils" :
  on-platform :
    linux :
      "mkdir -p '{.}/build'"
      "cc -fPIC -c -DPLATFORM_LINUX '-I{STANZA_CONFIG}/include' '{.}/src/file_system_utils.c' -o '{.}/build/file_system_utils.o'"
      "ar rcs '{.}/build/libstz_file_system_utils.a' '{.}/build/file_system_utils.o'"
    os-x :
      "mkdir -p '{.}/build'"
      "cc -fPIC -c -DPLATFORM_OS_X '-I{STANZA_CONFIG}/include' '{.}/src/utils/file_system_utils.c' -c -o '{.}/build/file_system_utils.o'"
      "ar rcs '{.}/build/libstz_file_system_utils.a' '{.}/build/file_system_utils.o'"
    windows :
      "if not exist '{.}\\build\\' mkdir {.}\\build"
      "gcc -c -DPLATFORM_WINDOWS '-I{STANZA_CONFIG}/include' '{.}\\src\\utils\\file_system_utils.c' -o '{.}\\build\\file_system_utils.o'"
      "ar rcs '{.}\\build\\libstz_file_system_utils.dll' '{.}\\build\\file_system_utils.o'"


build main :
  inputs:
    file_system_utils
  pkg: ".slm/pkgs"
  ;o: "main"

build-test file_system_utils_tests :
  inputs:
    file_system_utils
    file_system_utils/tests
  pkg: ".slm/test-pkgs"
  o: "file_system_utils_tests"

